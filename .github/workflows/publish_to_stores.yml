name: Publish to Stores

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:
    inputs:
      skip_firefox_upload:
        description: 'Skip Firefox Store upload'
        type: boolean
        default: false
      skip_firefox_sign:
        description: 'Skip Firefox signing'
        type: boolean
        default: false
      skip_github_release:
        description: 'Skip GitHub Release creation'
        type: boolean
        default: false
      ref:
        description: 'Git ref (tag/branch) to build from'
        required: false
        type: string
        default: 'main'

jobs:
  build:
    name: Build ${{ matrix.build_target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_target:
          - chromium
          - firefox
          - web
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build:${{ matrix.build_target }}
        env:
          GIPHY_API_KEY: ${{ secrets.GIPHY_API_KEY }}
          UNSPLASH_API_KEY: ${{ secrets.UNSPLASH_API_KEY }}
          NASA_API_KEY: ${{ secrets.NASA_API_KEY }}
      - uses: actions/upload-artifact@v4
        with:
          name: tabliss-${{ matrix.build_target }}
          path: dist/${{ matrix.build_target }}

  sign-firefox:
    needs: build
    if: ${{ !inputs.skip_firefox_sign }}
    name: Sign Firefox Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions/download-artifact@v4
        with:
          name: tabliss-firefox
          path: firefox-build
      - name: Install web-ext
        run: npm install -g web-ext
      - name: Sign Firefox Extension
        run: |
          cd firefox-build
          web-ext sign --api-key=${{ secrets.AMO_ISSUER }} --api-secret=${{ secrets.AMO_SECRET }} --channel=unlisted
      - uses: actions/upload-artifact@v4
        with:
          name: tabliss-firefox-signed
          path: firefox-build/web-ext-artifacts/*.xpi

  upload-firefox-store:
    needs: build
    if: ${{ !inputs.skip_firefox_upload }}
    name: Upload extension to Firefox Store
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions/download-artifact@v4
        with:
          name: tabliss-firefox
      - run: zip release.zip ./* -r; mv release.zip ../release.zip; rm -rf *
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - run: zip source.zip ./* -r; mv source.zip ../source.zip; rm -rf *
      - run: mv ../release.zip release.zip; mv ../source.zip source.zip
      - uses: yayuyokitano/firefox-addon@v0.0.6-alpha
        with:
          api_key: ${{ secrets.AMO_ISSUER }}
          api_secret: ${{ secrets.AMO_SECRET }}
          guid: "extension@tabliss-maintained"
          xpi_path: release.zip
          src_path: source.zip
      - run: echo Now go add the changelog at https://addons.mozilla.org/en-US/developers/addon/tabliss-maintained/versions/

  create-release:
    needs: [build, sign-firefox]
    if: ${{ !inputs.skip_github_release }}
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create ZIP files and prepare signed XPI
        run: |
          cd artifacts/tabliss-firefox
          zip -r ../../tabliss-firefox.zip ./*
          if [ -d "../tabliss-firefox-signed" ]; then
            cd ../tabliss-firefox-signed
            cp *.xpi ../../tabliss-firefox-signed.xpi
          fi
          cd ../tabliss-chromium
          zip -r ../../tabliss-chromium.zip ./*
          cd ../tabliss-web
          zip -r ../../tabliss-web.zip ./*
          cd ../..
      - name: Get version without v prefix
        id: version
        run: |
          REF=${{ inputs.ref || github.ref_name }}
          VERSION=${REF#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "ref=$REF" >> $GITHUB_OUTPUT
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          name: Version ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.ref }}
          files: |
            tabliss-firefox-signed.xpi
            tabliss-firefox.zip
            tabliss-chromium.zip
            tabliss-web.zip
          draft: true
          prerelease: false
          generate_release_notes: true
      - run: echo Now go publish the release at https://github.com/BookCatKid/tabliss-maintained/releases/${{ steps.version.outputs.ref }}
