name: Push

on: push

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm test

  build:
    name: Build ${{ matrix.build_target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_target:
          - chromium
          - firefox
          - web
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run build:${{ matrix.build_target }}
        env:
          GIPHY_API_KEY: ${{ secrets.GIPHY_API_KEY }}
          UNSPLASH_API_KEY: ${{ secrets.UNSPLASH_API_KEY }}
          NASA_API_KEY: ${{ secrets.NASA_API_KEY }}

      # Use upload-pages-artifact only for web
      - uses: actions/upload-artifact@v4
        if: matrix.build_target == 'web'
        with:
          name: tabliss-web
          path: dist/web

      # Use upload-artifact for other build targets
      - uses: actions/upload-artifact@v4
        if: matrix.build_target != 'web'
        with:
          name: tabliss-${{ matrix.build_target }}
          path: dist/${{ matrix.build_target }}

  create-release:
    name: Create Draft GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest commit message
        id: commit
        run: |
          echo "message=${{ github.event.head_commit.message }}" >> $GITHUB_ENV
          title=$(echo "${{ github.event.head_commit.message }}" | head -n 1)
          body=$(echo "${{ github.event.head_commit.message }}" | tail -n +2)
          echo "title=$title" >> $GITHUB_ENV
          echo "body=$body" >> $GITHUB_ENV

      - name: Extract version number
        id: version
        run: |
          if [[ "${{ env.title }}" =~ ^Version\ ([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_ENV
            echo "should_release=true" >> $GITHUB_ENV
          else
            echo "should_release=false" >> $GITHUB_ENV
          fi

      - name: Download build artifacts (web)
        if: env.should_release == 'true'
        uses: actions/download-artifact@v3
        with:
          name: tabliss-web

      - name: Download build artifacts (chromium)
        if: env.should_release == 'true'
        uses: actions/download-artifact@v3
        with:
          name: tabliss-chromium

      - name: Download build artifacts (firefox)
        if: env.should_release == 'true'
        uses: actions/download-artifact@v3
        with:
          name: tabliss-firefox

      - name: Upload build artifacts to release (web)
        if: env.should_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: Version ${{ env.version }} - Web
          body: ${{ env.body }}
          draft: true
          files: tabliss-web/*  # Upload web build artifacts

      - name: Upload build artifacts to release (chromium)
        if: env.should_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: Version ${{ env.version }} - Chromium
          body: ${{ env.body }}
          draft: true
          files: tabliss-chromium/*  # Upload chromium build artifacts

      - name: Upload build artifacts to release (firefox)
        if: env.should_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: Version ${{ env.version }} - Firefox
          body: ${{ env.body }}
          draft: true
          files: tabliss-firefox/*  # Upload firefox build artifacts
          
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
